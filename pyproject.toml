[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools >= 65.3.0", # required by pyproject+setuptools_scm integration and editable installs
  "setuptools_scm[toml] >= 7.0.5" # required for "no-local-version" scheme
]

[project]
authors = [{"email" = "nchakrab@redhat.com", "name" = "Nilashish Chakarborty"}]
classifiers = [
  'Development Status :: 5 - Production/Stable',
  'Intended Audience :: Developers',
  'License :: OSI Approved :: Apache Software License',
  'Operating System :: OS Independent',
  'Programming Language :: Python :: 3 :: Only',
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
  'Programming Language :: Python :: 3.13',
  'Programming Language :: Python :: Implementation :: CPython',
  'Programming Language :: Python',
  'Topic :: Software Development :: Code Generators',
  'Topic :: Utilities'
]
description = "A CLI tool for scaffolding Ansible Content."
dynamic = ["dependencies", "optional-dependencies", "version"]
keywords = ["ansible"]
license = {text = "Apache"}
maintainers = [{"email" = "info@ansible.com", "name" = "Ansible by Red Hat"}]
name = "ansible-creator"
readme = "README.md"
requires-python = ">=3.10"

[project.scripts]
ansible-creator = "ansible_creator.cli:main"

[project.urls]
changelog = "https://github.com/ansible/ansible-creator/releases"
documentation = "https://ansible.readthedocs.io/projects/creator/"
homepage = "https://github.com/ansible/ansible-creator"
repository = "https://github.com/ansible/ansible-creator"

[tool.coverage.report]
exclude_also = ["if TYPE_CHECKING:", "pragma: no cover"]
fail_under = 93
ignore_errors = true
show_missing = true
skip_covered = true
skip_empty = true
sort = "Cover"

[tool.coverage.run]
branch = false # https://github.com/nedbat/coveragepy/issues/605
concurrency = ["multiprocessing", "thread"]
omit = ["_version.py"]
parallel = true
source_pkgs = ["ansible_creator"]

[tool.mypy]
cache_dir = "./.cache/.mypy"
exclude = 'tests/fixtures'
files = ["src", "tests"]
strict = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["pytest_ansible.molecule"]

[tool.pydoclint]
allow-init-docstring = true
arg-type-hints-in-docstring = false
baseline = ".config/pydoclint-baseline.txt"
check-return-types = false
exclude = '\.git|\.tox|build|out|venv'
should-declare-assert-error-if-assert-statement-exists = true
should-document-private-class-attributes = true
show-filenames-in-every-violation-message = true
skip-checking-short-docstrings = false
style = "google"

[tool.pylint]

[tool.pylint.format]
max-line-length = 100

[tool.pylint.master]
good-names = "i,j,k,ex,Run,_,f,fh"
ignore = [
  "_version.py", # built by setuptools_scm
  "test_integration.py" # will have a pytest-ansible import error
]
jobs = 0
no-docstring-rgx = "__.*__"

[tool.pylint.messages_control]
disable = [
  "duplicate-code",
  "too-few-public-methods",
  "too-many-instance-attributes",
  "unknown-option-value"
]
enable = [
  "useless-suppression"
]
fail-on = [
  "useless-suppression"
]

[tool.pytest.ini_options]
addopts = "-ra --showlocals --durations=10"
cache_dir = "./.cache/.pytest"
junit_family = "legacy" # see https://docs.codecov.com/docs/test-analytics
norecursedirs = "tests/fixtures"
testpaths = "tests"
tmp_path_retention_policy = "failed"
verbosity_assertions = 2

[tool.ruff]
builtins = ["__"]
cache-dir = "./.cache/.ruff"
exclude = ["tests/fixtures"]
fix = true
line-length = 100
target-version = "py310"

[tool.ruff.lint]
ignore = [
  "COM812", # conflicts with ISC001 on format
  "ISC001" # conflicts with COM812 on format
]
select = ["ALL"]

[tool.ruff.lint.flake8-pytest-style]
parametrize-values-type = "tuple"

[tool.ruff.lint.isort]
known-first-party = ["src"]
lines-after-imports = 2 # Ensures consistency for cases when there's variable vs function/class definitions after imports
lines-between-types = 1 # Separate import/from with 1 line
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"_version.py" = ["SIM108"]
"src/ansible_creator/resources/collection_project/tests/**" = ["SLF001", "S101", "S602", "T201"]
"src/ansible_creator/resources/collection_project/tests/unit/__init__.py" = ["D104"]
"tests/**" = ["SLF001", "S101", "S602", "T201"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.setuptools.dynamic]
dependencies = {file = [".config/requirements.in"]}
optional-dependencies.docs = {file = [".config/requirements-docs.in"]}
optional-dependencies.test = {file = [".config/requirements-test.in"]}

[tool.setuptools_scm]
# To prevent accidental pick of mobile version tags such 'v6'
git_describe_command = [
  "git",
  "describe",
  "--dirty",
  "--long",
  "--tags",
  "--match",
  "v*.*"
]
local_scheme = "no-local-version"
tag_regex = "^(?P<prefix>v)?(?P<version>\\d+[^\\+]*)(?P<suffix>.*)?$"
write_to = "src/ansible_creator/_version.py"

[tool.tomlsort]
in_place = true
sort_inline_tables = true
sort_table_keys = true

[tool.uv.pip]
annotation-style = "line"
custom-compile-command = "tox run -e deps"
no-emit-package = [
  "ansible-core",
  "exceptiongroup",
  "pip",
  "resolvelib",
  "ruamel-yaml-clib",
  "tomli",
  "typing_extensions",
  "uv"
]
